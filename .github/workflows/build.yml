
name: docker-build
on:
   push:
      branches:
        - 'main'

jobs:
    build:
      runs-on: ubuntu-22.04
      permissions:
        contents: read
        packages: write

      steps:
        -
          name: Checkout 
          uses: actions/checkout@v2
        -
          name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - 
          name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: false
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ secrets.MAJOR }}.${{ secrets.MINOR }}
            
   
        - 
          name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: '${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ secrets.MAJOR }}.${{ secrets.MINOR }}'
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'

        - name: Install Cosign
          uses: sigstore/cosign-installer@main

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        - name: Sign the published Docker image
          run: |
             cosign sign --key env://COSIGN_PRIVATE_KEY ${TAGS}
          env:
            TAGS: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ secrets.MAJOR }}.${{ secrets.MINOR }}
            COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
            COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
          

        #   name: Set up Docker Buildx
        #   uses: docker/setup-buildx-action@v1
        # -
        #   name: Build and push
        #   uses: docker/build-push-action@v2
        #   with:
        #     context: .
        #     file: ./Dockerfile
        #     push: true
        #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ secrets.MAJOR }}.${{ secrets.MINOR }}


#========================













# name: Build and publish a Docker image
# on:
#   push:
#     branches:
#       - 'main'
#     tags:
#       - 'v[0-9]+.[0-9]+.[0-9]+'
#   pull_request:
#     branches:
#       - 'main'
# jobs:
#   build:
#     name: Build & push docker image
#     runs-on: ubuntu-latest
#     env:
#       IMG_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Debug
#         run: |
#           echo "github.ref -> {{ github.ref }}"
 
#       - name: Docker metadata
#         id: metadata
#         uses: docker/metadata-action@v3
#         with:
#           images: ${{ env.IMG_NAME }}
#           tags: |
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v1
#         if: ${{ github.ref_type == 'tag' }}
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: ${{ github.event.base_ref =='refs/heads/main' && github.ref_type == 'tag' && !startsWith(github.ref, 'refs/tags/v0.')}}
#           tags: ${{ steps.metadata.outputs.tags }}
#           labels: ${{ steps.metadata.outputs.labels }}
            
            

# ####TRY


# name: Deploy My Image to My Private Reg

# on:
#   push:
#     branches:
#       - main
#     tags:
#       - "v*-tracy"
#   pull_request:
#     branches:
#       - 'master'

# jobs:
#   deploy-docker-hello-world:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ secrets.REGISTRY }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}
#           flavor: latest=true
#           tags: |
#             type=ref,event=tag
#             type=ref,event=pr
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}

#       - name: Login to image repository
#         if: github.ref_type == 'tag'
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ secrets.REGISTRY }}
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           file: ./Dockerfile
#           push:  ${{ github.ref_type == 'tag' }} # ${{ secrets.REGISTRY }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
# #####



            




#####Mini
# name: Deploy My Image to My Private Reg

# on:
#   push:
#     branches:
#       - main
#     tags:
#       - "v*-tracy"

# jobs:
#   deploy-docker-hello-world:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ secrets.REGISTRY }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}
#           flavor: latest=true
#           tags: |
#             type=ref,event=tag
#             type=ref,event=pr
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}

#       - name: Login to image repository
#         if: github.ref_type == 'tag'
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ secrets.REGISTRY }}
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           file: ./Dockerfile
#           push: ${{ github.ref_type == 'tag' }} # ${{ secrets.REGISTRY }}/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.APP_NAME }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
      



# ###### --------------------------------
# # name: docker-build
# #   on:
# #     push:
# #       branches:
# #         - 'main'

# #   jobs:
# #     build:
# #       runs-on: ubuntu-latest

# #       steps:
# #         -
# #           name: Checkout 
# #           uses: actions/checkout@v2
# #         -
# #           name: Login to Docker Hub
# #           uses: docker/login-action@v1
# #           with:
# #             username: ${{ secrets.DOCKER_HUB_USERNAME }}
# #             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
# #         -
# #           name: Set up Docker Buildx
# #           uses: docker/setup-buildx-action@v1
# #         -
# #           name: Build and push
# #           uses: docker/build-push-action@v2
# #           with:
# #             context: .
# #             file: ./Dockerfile
# #             push: true
# #             tags: ${{ secrets.DOCKER_HUB_USERNAME }}/dockerapp:v01



# #---------------------------------------------


# #Uncomment top to start
# # Ignore This
# # name: Build
# # on: [push, pull_request]
# # jobs:
# #   build:
# #     name: Build
# #     runs-on: ubuntu-latest
# #     steps:
# #     - uses: actions/checkout@v2
# #     - name: Build
# #       uses: docker/build-push-action@v1
# #       with:
# #         push: false
